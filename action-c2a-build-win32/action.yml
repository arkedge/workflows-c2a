name: build-c2a-win32
description: Build C2A user on Win32 by MSVC/MSVC++

author: '@sksat'

inputs:
  c2a_repo:
    type: string
    default: ${{ github.repository }}
  gh_federation_endpoint:
    type: string
    default: ""
  federation_repos:
    type: string
    default: ""
  c2a_dir:
    type: string
    default: '.'
  c2a_custom_setup:
    type: string
    default: ''
  build_as_cxx:
    type: boolean
    default: false
  cmake_generator:
    type: string
    default: 'Visual Studio 17 2022'
  cmake_flags:
    type: string
    default: ''

runs:
  using: "composite"
  steps:
    - name: gh-federation
      if: inputs.federation_repos != ''
      uses: arkedge/gh-federation@437d2b0433a7d4a009e311d176d18abd85626fa4 # v3.1.0
      with:
        endpoint: ${{ inputs.gh_federation_endpoint }}
        repos: ${{ inputs.federation_repos }}

    - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      with:
        repository: ${{ inputs.c2a_repo }}
        submodules: 'recursive'
        path: ./c2a_user

    - name: Custom Setup
      if: inputs.c2a_custom_setup != ''
      working-directory: ./c2a_user/${{ inputs.c2a_dir }}
      shell: bash
      run: ${{ inputs.c2a_custom_setup }}

    - name: CMake
      if: inputs.build_as_cxx == 'false'
      working-directory: ./c2a_user/${{ inputs.c2a_dir }}
      shell: bash
      run: |
        cmake -B ./build \
          -G "${{ inputs.cmake_generator }}" \
          -DBUILD_C2A_AS_CXX=OFF \
          ${{ inputs.cmake_flags }}

    - name: CMake as C++
      if: inputs.build_as_cxx == 'true'
      working-directory: ./c2a_user/${{ inputs.c2a_dir }}
      shell: bash
      run: |
        cmake -B ./build \
          -G "${{ inputs.cmake_generator }}" \
          -DBUILD_C2A_AS_CXX=ON \
          ${{ inputs.cmake_flags }}

    - name: Build
      working-directory: ./c2a_user/${{ inputs.c2a_dir }}
      shell: bash
      run: cmake --build ./build
