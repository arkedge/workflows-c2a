name: Build

on:
  workflow_call:
    inputs:
      c2a_repo:
        type: string
        default: ${{ github.repository }}
      c2a_dir:
        type: string
        default: '.'
      c2a_custom_setup:
        type: string
        default: ''
      sils_mockup:
        type: boolean
        default: true
      build_as_cxx:
        type: boolean
        default: true
      cmake_generator_linux32:
        type: string
        default: 'Unix Makefiles'
      cmake_generator_win32:
        type: string
        default: 'Visual Studio 17 2022'
      cmake_flags:
        type: string
        default: ''
      # job specific CMake flags
      cmake_flags_linux32:
        type: string
        default: ''
      cmake_flags_linux32_cxx:
        type: string
        default: ''
      cmake_flags_win32:
        type: string
        default: ''
      cmake_flags_win32_cxx:
        type: string
        default: ''
      # reviewdog
      reviewdog_default_reporter:
        type: string
        default: github-pr-review
      reviewdog_default_filter:
        type: string
        default: added

defaults:
  run:
    working-directory: ./c2a_user

env:
  SELF_VERSION: split-c2a-setup-action

jobs:
  build_linux32:
    name: Build for linux32
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        compiler: [gcc, clang]
        warning: [Werror, Wextra]
        exclude:
          - compiler: gcc
            warning: Werror

    steps:
      - uses: actions/checkout@v3
        with:
          repository: arkedge/workflows-c2a
          ref: ${{ env.SELF_VERSION }}

      - uses: ./action-c2a-build
        env:
          CC: ${{ matrix.compiler }}
        with:
          c2a_repo: ${{ inputs.c2a_repo }}
          c2a_dir: ${{ inputs.c2a_dir }}
          c2a_custom_setup: ${{ inputs.c2a_custom_setup }}
          cmake_generator: ${{ inputs.cmake_generator_linux32 }}
          cmake_flags: |
            ${{ inputs.cmake_flags }} ${{ inputs.cmake_flags_linux32 }} \
            -DADD_WEXTRA_FLAGS=${{ contains(matrix.warning, 'Wextra') }} \
            -DADD_WERROR_FLAGS=${{ contains(matrix.warning, 'Werror') }}
          reviewdog_tool_name: clang-tidy -${{ matrix.warning }}
          reviewdog_reporter: ${{ (!contains(matrix.warning, 'Wextra') && inputs.reviewdog_default_reporter ) || 'github-check' }}
          reviewdog_filter_mode: ${{ (!contains(matrix.warning, 'Wextra') && inputs.reviewdog_default_filter ) || 'nofilter' }}

  build_linux32_cxx:
    if: inputs.build_as_cxx
    name: Build as C++ for linux32
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          repository: arkedge/workflows-c2a
          ref: ${{ env.SELF_VERSION }}

      - uses: ./action-c2a-build
        with:
          c2a_repo: ${{ inputs.c2a_repo }}
          c2a_dir: ${{ inputs.c2a_dir }}
          c2a_custom_setup: ${{ inputs.c2a_custom_setup }}
          build_as_cxx: true
          cmake_generator: ${{ inputs.cmake_generator_linux32 }}
          cmake_flags: ${{ inputs.cmake_flags }} ${{ inputs.cmake_flags_linux32 }}

  build_win32:
    name: Build for Win32 by MSVC
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
        with:
          repository: arkedge/workflows-c2a
          ref: ${{ env.SELF_VERSION }}

      - uses: ./action-c2a-build-win32
        with:
          c2a_repo: ${{ inputs.c2a_repo }}
          c2a_dir: ${{ inputs.c2a_dir }}
          c2a_custom_setup: ${{ inputs.c2a_custom_setup }}
          cmake_generator: ${{ inputs.cmake_generator_win32 }}
          cmake_flags: ${{ inputs.cmake_flags }} ${{ inputs.cmake_flags_win32 }}

  build_win32_cxx:
    if: inputs.build_as_cxx
    name: Build as C++ for Win32 by MSVC++
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
        with:
          repository: arkedge/workflows-c2a
          ref: ${{ env.SELF_VERSION }}

      - uses: ./action-c2a-build-win32
        with:
          c2a_repo: ${{ inputs.c2a_repo }}
          c2a_dir: ${{ inputs.c2a_dir }}
          c2a_custom_setup: ${{ inputs.c2a_custom_setup }}
          build_as_cxx: true
          cmake_generator: ${{ inputs.cmake_generator_win32 }}
          cmake_flags: ${{ inputs.cmake_flags }} ${{ inputs.cmake_flags_win32_cxx }}
