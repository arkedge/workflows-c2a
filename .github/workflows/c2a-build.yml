name: Build

on:
  workflow_call:
    inputs:
      c2a_repo:
        type: string
        default: ${{ github.repository }}
      c2a_dir:
        type: string
        default: '.'
      c2a_custom_setup:
        type: string
        default: ''
      sils_mockup:
        type: boolean
        default: true
      build_as_cxx:
        type: boolean
        default: true
      cmake_generator_linux32:
        type: string
        default: 'Unix Makefiles'
      cmake_generator_win32:
        type: string
        default: 'Visual Studio 17 2022'
      cmake_flags:
        type: string
        default: ''
      # job specific CMake flags
      cmake_flags_linux32:
        type: string
        default: ''
      cmake_flags_linux32_cxx:
        type: string
        default: ''
      cmake_flags_win32:
        type: string
        default: ''
      cmake_flags_win32_cxx:
        type: string
        default: ''
      # reviewdog
      reviewdog_default_reporter:
        type: string
        default: github-pr-review
      reviewdog_default_filter:
        type: string
        default: added

defaults:
  run:
    working-directory: ./c2a_user

jobs:
  build_linux32:
    name: Build for linux32
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        compiler: [gcc, clang]
        warning: [Werror, Wextra]
        exclude:
          - compiler: gcc
            warning: Werror

    steps:
      - uses: actions/checkout@v3
        if: inputs.c2a_dir == '.'
        with:
          path: ./c2a_user
          repository: ${{ inputs.c2a_repo }}
          submodules: 'recursive'
      - uses: actions/checkout@v3
        if: inputs.c2a_dir != '.'
        with:
          path: ./repo
          repository: ${{ inputs.c2a_repo }}
          submodules: 'recursive'
      - name: Link C2A user dir to ./c2a_user
        working-directory: .
        if: inputs.c2a_dir != '.'
        run: ln -s ./repo/${{ inputs.c2a_dir }} ./c2a_user

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build libc6-dev-i386

      - name: Check setup script exist
        id: check_setup
        continue-on-error: true
        shell: bash
        run: test -f setup.sh

      - name: Setup
        if: steps.check_setup.outcome == 'success'
        run: ./setup.sh

      - name: Custom Setup
        if: inputs.c2a_custom_setup != ''
        shell: bash
        run: ${{ inputs.c2a_custom_setup }}

      - name: CMake
        env:
          CC: ${{ matrix.compiler }}
        run: |
          cmake -B ./build \
            -G "${{ inputs.cmake_generator_linux32 }}" \
            -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
            -DADD_WEXTRA_FLAGS=${{ contains(matrix.warning, 'Wextra') }} \
            -DADD_WERROR_FLAGS=${{ contains(matrix.warning, 'Werror') }} \
            ${{ (inputs.sils_mockup && '-DUSE_SILS_MOCKUP=ON') || '' }} \
            ${{ inputs.cmake_flags }} ${{ inputs.cmake_flags_linux32 }}

      - name: reviewdog with clang-tidy -${{ matrix.warning }}
        if: matrix.compiler == 'clang'
        uses: arkedge/action-clang-tidy@v1.0.0
        with:
          tool_name: clang-tidy -${{ matrix.warning }}
          reporter: ${{ (!contains(matrix.warning, 'Wextra') && inputs.reviewdog_default_reporter ) || 'github-check' }}
          filter_mode: ${{ (!contains(matrix.warning, 'Wextra') && inputs.reviewdog_default_filter ) || 'nofilter' }}
          workdir: ./c2a_user/build

      - name: Build
        run: cmake --build ./build

      - name: Run executable by SILS mockup
        if: inputs.sils_mockup
        run: |
          ls -lh ./build/C2A
          timeout 3 ./build/C2A || exit 0

  build_linux32_cxx:
    if: inputs.build_as_cxx
    name: Build as C++ for linux32
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: ./action-c2a-build
        with:
          c2a_repo: ${{ inputs.c2a_repo }}
          c2a_dir: ${{ inputs.c2a_dir }}
          c2a_custom_setup: ${{ inputs.c2a_custom_setup }}
          build_as_cxx: true
          cmake_generator: ${{ inputs.cmake_generator_linux32 }}
          cmake_flags: ${{ inputs.cmake_flags }} ${{ inputs.cmake_flags_linux32 }}

  build_win32:
    name: Build for Win32 by MSVC
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - uses: ./action-c2a-build-win32
        with:
          c2a_repo: ${{ inputs.c2a_repo }}
          c2a_dir: ${{ inputs.c2a_dir }}
          c2a_custom_setup: ${{ inputs.c2a_custom_setup }}
          cmake_generator: ${{ inputs.cmake_generator_win32 }}
          cmake_flags: ${{ inputs.cmake_flags }} ${{ inputs.cmake_flags_win32 }}

  build_win32_cxx:
    if: inputs.build_as_cxx
    name: Build as C++ for Win32 by MSVC++
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - uses: ./action-c2a-build-win32
        with:
          c2a_repo: ${{ inputs.c2a_repo }}
          c2a_dir: ${{ inputs.c2a_dir }}
          c2a_custom_setup: ${{ inputs.c2a_custom_setup }}
          build_as_cxx: true
          cmake_generator: ${{ inputs.cmake_generator_win32 }}
          cmake_flags: ${{ inputs.cmake_flags }} ${{ inputs.cmake_flags_win32_cxx }}
