name: build-c2a
description: Build C2A user

author: '@sksat'

inputs:
  c2a_repo:
    type: string
    default: ${{ github.repository }}
  c2a_dir:
    type: string
    default: '.'
  c2a_custom_setup:
    type: string
    default: ''
  sils_mockup:
    type: boolean
    default: true
  build_as_cxx:
    type: boolean
    default: false
  cmake_generator:
    type: string
    default: 'Unix Makefiles'
  cmake_flags:
    type: string
    default: ''

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      if: inputs.c2a_dir == '.'
    - uses: actions/checkout@v3
      if: inputs.c2a_dir == '.'
      with:
        path: ./c2a_user
        repository: ${{ inputs.c2a_repo }}
        submodules: 'recursive'
    - uses: actions/checkout@v3
      if: inputs.c2a_dir != '.'
      with:
        path: ./repo
        repository: ${{ inputs.c2a_repo }}
        submodules: 'recursive'
    - name: Link C2A user dir to ./c2a_user
      working-directory: .
      if: inputs.c2a_dir != '.'
      shell: bash
      run: ln -s ./repo/${{ inputs.c2a_dir }} ./c2a_user

    - name: Install dependencies
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build libc6-dev-i386 g++-multilib

    - name: Check setup script exist
      id: check_setup
      continue-on-error: true
      working-directory: ./c2a_user
      shell: bash
      run: test -f setup.sh

    - name: Setup
      if: steps.check_setup.outcome == 'success'
      working-directory: ./c2a_user
      shell: bash
      run: ./setup.sh

    - name: Custom Setup
      if: inputs.c2a_custom_setup != ''
      working-directory: ./c2a_user
      shell: bash
      run: ${{ inputs.c2a_custom_setup }}

    - name: CMake
      env:
        CC: clang
        CXX: clang++
      working-directory: ./c2a_user
      shell: bash
      # ignore windows.h
      run: |
        cmake -B ./build \
          -G "${{ inputs.cmake_generator }}" \
          -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
          -DBUILD_C2A_AS_CXX=ON \
          -DUSE_SCI_COM_WINGS=OFF \
          ${{ inputs.cmake_flags }}

    - name: Build
      working-directory: ./c2a_user
      shell: bash
      run: cmake --build ./build

    - name: Run executable by SILS mockup
      if: inputs.sils_mockup
      working-directory: ./c2a_user
      shell: bash
      run: |
        ls -lh ./build/C2A
        timeout 3 ./build/C2A || exit 0
